
(su-real::with-hsr-process-modules
  (setf perceived-object nil)
(call-text-to-speech-action "Trying to perceive object cerealbox")


            (let* ((?source-object-desig
                     (desig:an object
                               (type :cerealbox)))
                   (?object-desig
                     (exe:perform (desig:an action
                                            (type detecting)
                                            (object ?source-object-desig)))))
              
              
              (roslisp:with-fields
                  ((?pose
                    (cram-designators::pose cram-designators:data)))
                  ?object-desig
                
                (setf perceived-object ?object-desig)
                  
                  
                  (call-text-to-speech-action "Successfully perceived object cereal")
                  (call-text-to-speech-action "Trying to grasp")
                
                
                (let ((?object-size
                       
                        (cl-tf2::make-3d-vector 0.05 0.05 0.2)))
                  
                  (exe:perform (desig:an action
                                         (type picking-up)
                                         (object-pose ?pose)
                                         (object-size ?object-size)
                                         (collision-mode :allow-all)))))
                                         
                                         
                                         
                                         
                  (let*
        ;;TF link hier angeben
        
             ((?object-height 0.2d0)
              (?place-pose (create-pose (list "map" (list 0.8441514600693761d0 -0.03988413836622828d0 0.8090069435874522d0) (list 0 0 0 1)))))             

    
          (exe:perform (desig:an action
                      (type placing))))

              
           ))
